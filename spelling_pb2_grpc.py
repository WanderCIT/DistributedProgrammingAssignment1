# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import spelling_pb2 as spelling__pb2


class SpellingBeeStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetLetters = channel.unary_unary(
                '/unary.SpellingBee/GetLetters',
                request_serializer=spelling__pb2.LetterRequest.SerializeToString,
                response_deserializer=spelling__pb2.SpellingLetters.FromString,
                )
        self.CheckWord = channel.unary_unary(
                '/unary.SpellingBee/CheckWord',
                request_serializer=spelling__pb2.SpellingBeeWordRequest.SerializeToString,
                response_deserializer=spelling__pb2.SpellingBeeWordResponse.FromString,
                )
        self.GetWords = channel.unary_unary(
                '/unary.SpellingBee/GetWords',
                request_serializer=spelling__pb2.WordsRequest.SerializeToString,
                response_deserializer=spelling__pb2.WordsResponse.FromString,
                )


class SpellingBeeServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetLetters(self, request, context):
        """A simple RPC.

        Obtains the SpellingBeeWordResponse at a given position.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckWord(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetWords(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SpellingBeeServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetLetters': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLetters,
                    request_deserializer=spelling__pb2.LetterRequest.FromString,
                    response_serializer=spelling__pb2.SpellingLetters.SerializeToString,
            ),
            'CheckWord': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckWord,
                    request_deserializer=spelling__pb2.SpellingBeeWordRequest.FromString,
                    response_serializer=spelling__pb2.SpellingBeeWordResponse.SerializeToString,
            ),
            'GetWords': grpc.unary_unary_rpc_method_handler(
                    servicer.GetWords,
                    request_deserializer=spelling__pb2.WordsRequest.FromString,
                    response_serializer=spelling__pb2.WordsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'unary.SpellingBee', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SpellingBee(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetLetters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/unary.SpellingBee/GetLetters',
            spelling__pb2.LetterRequest.SerializeToString,
            spelling__pb2.SpellingLetters.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckWord(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/unary.SpellingBee/CheckWord',
            spelling__pb2.SpellingBeeWordRequest.SerializeToString,
            spelling__pb2.SpellingBeeWordResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetWords(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/unary.SpellingBee/GetWords',
            spelling__pb2.WordsRequest.SerializeToString,
            spelling__pb2.WordsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
